//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieWiki.MovieWikiServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieWikiServiceReference.IMovieWikiService")]
    public interface IMovieWikiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/InsertWikiArticle", ReplyAction="http://tempuri.org/IMovieWikiService/InsertWikiArticleResponse")]
        int InsertWikiArticle(string articleType, string title, string descriptionXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/InsertWikiArticle", ReplyAction="http://tempuri.org/IMovieWikiService/InsertWikiArticleResponse")]
        System.Threading.Tasks.Task<int> InsertWikiArticleAsync(string articleType, string title, string descriptionXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/InsertWikiArticleEditHistory", ReplyAction="http://tempuri.org/IMovieWikiService/InsertWikiArticleEditHistoryResponse")]
        int InsertWikiArticleEditHistory(int aticleId, int accountId, System.DateTime timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/InsertWikiArticleEditHistory", ReplyAction="http://tempuri.org/IMovieWikiService/InsertWikiArticleEditHistoryResponse")]
        System.Threading.Tasks.Task<int> InsertWikiArticleEditHistoryAsync(int aticleId, int accountId, System.DateTime timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/InsertUserAccount", ReplyAction="http://tempuri.org/IMovieWikiService/InsertUserAccountResponse")]
        int InsertUserAccount(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/InsertUserAccount", ReplyAction="http://tempuri.org/IMovieWikiService/InsertUserAccountResponse")]
        System.Threading.Tasks.Task<int> InsertUserAccountAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/UpdateWikiArticle", ReplyAction="http://tempuri.org/IMovieWikiService/UpdateWikiArticleResponse")]
        int UpdateWikiArticle(int articleId, string descriptionXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/UpdateWikiArticle", ReplyAction="http://tempuri.org/IMovieWikiService/UpdateWikiArticleResponse")]
        System.Threading.Tasks.Task<int> UpdateWikiArticleAsync(int articleId, string descriptionXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/DeleteWikiArticle", ReplyAction="http://tempuri.org/IMovieWikiService/DeleteWikiArticleResponse")]
        int DeleteWikiArticle(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/DeleteWikiArticle", ReplyAction="http://tempuri.org/IMovieWikiService/DeleteWikiArticleResponse")]
        System.Threading.Tasks.Task<int> DeleteWikiArticleAsync(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/GetAllWikiArticles", ReplyAction="http://tempuri.org/IMovieWikiService/GetAllWikiArticlesResponse")]
        System.Data.DataSet GetAllWikiArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/GetAllWikiArticles", ReplyAction="http://tempuri.org/IMovieWikiService/GetAllWikiArticlesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllWikiArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/GetAllWikiArticleEditHistories", ReplyAction="http://tempuri.org/IMovieWikiService/GetAllWikiArticleEditHistoriesResponse")]
        System.Data.DataSet GetAllWikiArticleEditHistories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/GetAllWikiArticleEditHistories", ReplyAction="http://tempuri.org/IMovieWikiService/GetAllWikiArticleEditHistoriesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllWikiArticleEditHistoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/GetAllUserAccounts", ReplyAction="http://tempuri.org/IMovieWikiService/GetAllUserAccountsResponse")]
        System.Data.DataSet GetAllUserAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieWikiService/GetAllUserAccounts", ReplyAction="http://tempuri.org/IMovieWikiService/GetAllUserAccountsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllUserAccountsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieWikiServiceChannel : MovieWiki.MovieWikiServiceReference.IMovieWikiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieWikiServiceClient : System.ServiceModel.ClientBase<MovieWiki.MovieWikiServiceReference.IMovieWikiService>, MovieWiki.MovieWikiServiceReference.IMovieWikiService {
        
        public MovieWikiServiceClient() {
        }
        
        public MovieWikiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieWikiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieWikiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieWikiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertWikiArticle(string articleType, string title, string descriptionXml) {
            return base.Channel.InsertWikiArticle(articleType, title, descriptionXml);
        }
        
        public System.Threading.Tasks.Task<int> InsertWikiArticleAsync(string articleType, string title, string descriptionXml) {
            return base.Channel.InsertWikiArticleAsync(articleType, title, descriptionXml);
        }
        
        public int InsertWikiArticleEditHistory(int aticleId, int accountId, System.DateTime timestamp) {
            return base.Channel.InsertWikiArticleEditHistory(aticleId, accountId, timestamp);
        }
        
        public System.Threading.Tasks.Task<int> InsertWikiArticleEditHistoryAsync(int aticleId, int accountId, System.DateTime timestamp) {
            return base.Channel.InsertWikiArticleEditHistoryAsync(aticleId, accountId, timestamp);
        }
        
        public int InsertUserAccount(string username, string password) {
            return base.Channel.InsertUserAccount(username, password);
        }
        
        public System.Threading.Tasks.Task<int> InsertUserAccountAsync(string username, string password) {
            return base.Channel.InsertUserAccountAsync(username, password);
        }
        
        public int UpdateWikiArticle(int articleId, string descriptionXml) {
            return base.Channel.UpdateWikiArticle(articleId, descriptionXml);
        }
        
        public System.Threading.Tasks.Task<int> UpdateWikiArticleAsync(int articleId, string descriptionXml) {
            return base.Channel.UpdateWikiArticleAsync(articleId, descriptionXml);
        }
        
        public int DeleteWikiArticle(int articleId) {
            return base.Channel.DeleteWikiArticle(articleId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteWikiArticleAsync(int articleId) {
            return base.Channel.DeleteWikiArticleAsync(articleId);
        }
        
        public System.Data.DataSet GetAllWikiArticles() {
            return base.Channel.GetAllWikiArticles();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllWikiArticlesAsync() {
            return base.Channel.GetAllWikiArticlesAsync();
        }
        
        public System.Data.DataSet GetAllWikiArticleEditHistories() {
            return base.Channel.GetAllWikiArticleEditHistories();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllWikiArticleEditHistoriesAsync() {
            return base.Channel.GetAllWikiArticleEditHistoriesAsync();
        }
        
        public System.Data.DataSet GetAllUserAccounts() {
            return base.Channel.GetAllUserAccounts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllUserAccountsAsync() {
            return base.Channel.GetAllUserAccountsAsync();
        }
    }
}
